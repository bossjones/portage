diff --git bin86-0.16.21/ld/catimage.c bin86-fixed/ld/catimage.c
index 1f5e160..9b72b61 100644
--- bin86-0.16.21/ld/catimage.c
+++ bin86-fixed/ld/catimage.c
@@ -21,6 +21,7 @@
  */
 
 #include <stdio.h>
+#include <string.h>
 #ifdef __STDC__
 #include <unistd.h>
 #include <stdlib.h>
@@ -31,6 +32,12 @@
 #error "Compile error: struct exec invalid (long not 32 bit ?)"
 #endif
 
+void copy_segment(long, long, long);
+void fatal(char *);
+void open_obj(char *);
+void patch_bin(long, int);
+void read_symtable();
+
 unsigned long text_offt[10];	/* Locations to patch (0=don't) */
 unsigned long data_offt[10];
 
@@ -39,7 +46,7 @@ FILE * ofd;
 FILE * ifd = 0;
 struct exec header;
 
-main(argc, argv)
+void main(argc, argv)
 int argc;
 char ** argv;
 {
@@ -100,7 +107,7 @@ char ** argv;
    exit(0);
 }
 
-open_obj(fname)
+void open_obj(fname)
 char * fname;
 {
    input_file = fname;
@@ -117,7 +124,7 @@ char * fname;
       fatal("Input file has bad magic number");
 }
 
-copy_segment(out_offset, in_offset, length)
+void copy_segment(out_offset, in_offset, length)
 long out_offset, in_offset, length;
 {
    char buffer[1024];
@@ -143,7 +150,7 @@ long out_offset, in_offset, length;
    }
 }
 
-patch_bin(file_off, value)
+void patch_bin(file_off, value)
 long file_off;
 int value;
 {
@@ -163,7 +170,7 @@ int value;
    }
 }
 
-read_symtable()
+void read_symtable()
 {
    struct nlist item;
    int nitems;
@@ -234,7 +241,7 @@ read_symtable()
    }
 }
 
-fatal(str)
+void fatal(str)
 char * str;
 {
    fprintf(stderr, "catimage:%s: %s\n", input_file, str);
diff --git bin86-0.16.21/ld/objchop.c bin86-fixed/ld/objchop.c
index c7631c1..9762e34 100644
--- bin86-0.16.21/ld/objchop.c
+++ bin86-fixed/ld/objchop.c
@@ -6,6 +6,9 @@
 #endif
 #include "x86_aout.h"
 
+void fatal(char *);
+void write_file(char *, long);
+
 #ifndef __OUT_OK
 
 main()
@@ -19,7 +22,7 @@ main()
 FILE * ifd;
 struct exec header;
 
-main(argc, argv)
+void main(argc, argv)
 int argc;
 char ** argv;
 {
@@ -56,7 +59,7 @@ char ** argv;
    exit(0);
 }
 
-write_file(fname, bsize)
+void write_file(fname, bsize)
 char * fname;
 long bsize;
 {
@@ -81,7 +84,7 @@ long bsize;
    fclose(ofd);
 }
 
-fatal(str)
+void fatal(str)
 char * str;
 {
    fprintf(stderr, "objchop: %s\n", str);
